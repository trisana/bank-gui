/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.daramaflix.views;
import com.dramaflix.models.DramaflixModels;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.util.List;
import com.dramflix.controllers.MergesortDramaflix;
import com.dramflix.controllers.BinarySearchDramaflix;
import static com.dramflix.controllers.BinarySearchDramaflix.performBinarySearchAll;
import static com.dramflix.controllers.BinarySearchDramaflix.performBinarySearchTitle;


/**
 *
 * @author USER
 */
public class Dramaflix extends javax.swing.JFrame {

    /**
     * Creates new form Dramaflix
     */
    int seletctedRow;
    ArrayList<DramaflixModels> dramaflixList = new ArrayList();
    
    public Dramaflix() {
        initComponents();
        getTableData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        logo = new javax.swing.JLabel();
        Title = new javax.swing.JLabel();
        SearchTextField = new javax.swing.JTextField();
        AddButton = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();
        UpdateButton = new javax.swing.JButton();
        TitleLabel = new javax.swing.JLabel();
        TitleTextField = new javax.swing.JTextField();
        DirectorLabel = new javax.swing.JLabel();
        DirectorTextField = new javax.swing.JTextField();
        ScreenwriterLabel = new javax.swing.JLabel();
        GenreLabel = new javax.swing.JLabel();
        CountryLabel = new javax.swing.JLabel();
        RatingLabel = new javax.swing.JLabel();
        EpisodeLabel = new javax.swing.JLabel();
        NetworkLabel = new javax.swing.JLabel();
        AiredLabel = new javax.swing.JLabel();
        SnLabel = new javax.swing.JLabel();
        ScreenwriterTextField = new javax.swing.JTextField();
        GenreTextField = new javax.swing.JTextField();
        CountryTextField = new javax.swing.JTextField();
        NetworkTextField = new javax.swing.JTextField();
        SnTextField = new javax.swing.JTextField();
        EpisodeTextField = new javax.swing.JTextField();
        RatingTextField = new javax.swing.JTextField();
        ClearButton = new javax.swing.JButton();
        SortComboBox = new javax.swing.JComboBox<>();
        AiredTextField = new javax.swing.JTextField();
        SortButton = new javax.swing.JButton();
        SearchComboBox = new javax.swing.JComboBox<>();
        SearchButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBackground(new java.awt.Color(158, 212, 227));

        Table.setBackground(new java.awt.Color(255, 255, 204));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"1", "Start-up", "Oh Choong Hwan", "Park Hye Ryun", "Romance", "4", "16", "Netflix tvN", "Oct 17,2020", "South Korea"},
                {"2", "Strong Woman Do Bong soon", "Lee Hyung-min", "Baek Mi-kyung", "Comady", "4", "16", "jTBC", "Feb 24,2017", "South Korea"},
                {"3", "Weak Hero Class 1", "Han Jun-hee", "You Su Min", "Action", "5", "8", "Prime Video", "Nov 18,2022", "South Korea"},
                {"4", "Squid Game", "Hwang Dong-hyuk", "Hwang Dong-hyuk", "Mystery", "5", "9", "Netflix", "Sep 17,2021", "South Korea"},
                {"5", "The Glory", "Ahn Gil Ho", "Kim Eun Sook", "Thriller", "5", "8", "Netflix", "Dec 30,2022", "South Korea"},
                {"6", "Hometown Cha-Cha-Cha", "Yoo Je Won", "Shin Ha Eun", "Romance", "3", "16", "Netflix tvN", "Aug 28,2021", "South Korea"},
                {"7", "Business Purposal", "Park Seon Ho", "Han Sul Hee", "Romance", " 4", "12", "Netflix tvN", "Feb 28,2022", "South Korea"},
                {"8", "True Beauty", "Kim Sang Hyub", "Lee Shi Eun", "Romance", "4", "16", "tvN", "Dec 9,2020", "South Korea"},
                {"9", "Happiness", "Ahn Gil Ho", "Han Sang Woon", "Thriller", "4", "12", "TVING", "Nov 5,2021", "South Korea"},
                {"10", "Sweet Home", "Lee Eung Bok", "Kim Hyung Min", "Thriller", "5", "10", "Netflix", "Dec 18 2020", "South Korea"}
            },
            new String [] {
                "S.N.", "Title", "Director", "Screenwriter", "Genre", "Rating", "Episode", "Network", "Aired", "Country"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Table);
        if (Table.getColumnModel().getColumnCount() > 0) {
            Table.getColumnModel().getColumn(0).setMinWidth(35);
            Table.getColumnModel().getColumn(0).setPreferredWidth(39);
            Table.getColumnModel().getColumn(0).setMaxWidth(40);
            Table.getColumnModel().getColumn(1).setMinWidth(170);
            Table.getColumnModel().getColumn(1).setPreferredWidth(175);
            Table.getColumnModel().getColumn(1).setMaxWidth(180);
            Table.getColumnModel().getColumn(2).setMinWidth(138);
            Table.getColumnModel().getColumn(2).setPreferredWidth(139);
            Table.getColumnModel().getColumn(2).setMaxWidth(140);
            Table.getColumnModel().getColumn(3).setMinWidth(135);
            Table.getColumnModel().getColumn(3).setPreferredWidth(139);
            Table.getColumnModel().getColumn(3).setMaxWidth(140);
            Table.getColumnModel().getColumn(4).setMinWidth(79);
            Table.getColumnModel().getColumn(4).setPreferredWidth(78);
            Table.getColumnModel().getColumn(4).setMaxWidth(80);
            Table.getColumnModel().getColumn(5).setMinWidth(48);
            Table.getColumnModel().getColumn(5).setPreferredWidth(49);
            Table.getColumnModel().getColumn(5).setMaxWidth(50);
            Table.getColumnModel().getColumn(6).setMinWidth(48);
            Table.getColumnModel().getColumn(6).setPreferredWidth(49);
            Table.getColumnModel().getColumn(6).setMaxWidth(50);
            Table.getColumnModel().getColumn(7).setMinWidth(75);
            Table.getColumnModel().getColumn(7).setPreferredWidth(77);
            Table.getColumnModel().getColumn(7).setMaxWidth(80);
            Table.getColumnModel().getColumn(8).setMinWidth(80);
            Table.getColumnModel().getColumn(8).setPreferredWidth(83);
            Table.getColumnModel().getColumn(8).setMaxWidth(85);
            Table.getColumnModel().getColumn(9).setMinWidth(93);
            Table.getColumnModel().getColumn(9).setPreferredWidth(94);
            Table.getColumnModel().getColumn(9).setMaxWidth(95);
        }

        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/daramaflix/views/dramaVerse.png"))); // NOI18N
        logo.setText("jLabel3");

        Title.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Dramaflix");

        SearchTextField.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));
        SearchTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchTextFieldActionPerformed(evt);
            }
        });

        AddButton.setText("Add");
        AddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddButtonActionPerformed(evt);
            }
        });

        DeleteButton.setText("Delete ");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });

        UpdateButton.setText("Update");
        UpdateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UpdateButtonMouseClicked(evt);
            }
        });
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });

        TitleLabel.setText("Title:");

        TitleTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TitleTextFieldKeyPressed(evt);
            }
        });

        DirectorLabel.setText("Director:");

        DirectorTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                DirectorTextFieldKeyPressed(evt);
            }
        });

        ScreenwriterLabel.setText("Screenwriter:");

        GenreLabel.setText("Genre:");

        CountryLabel.setText("Country:");

        RatingLabel.setText("Rating:");

        EpisodeLabel.setText("Episode:");

        NetworkLabel.setText("Network:");

        AiredLabel.setText("Aired:");

        SnLabel.setText("S.N:");

        ScreenwriterTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ScreenwriterTextFieldKeyPressed(evt);
            }
        });

        GenreTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenreTextFieldActionPerformed(evt);
            }
        });
        GenreTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                GenreTextFieldKeyPressed(evt);
            }
        });

        CountryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CountryTextFieldActionPerformed(evt);
            }
        });
        CountryTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CountryTextFieldKeyPressed(evt);
            }
        });

        NetworkTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NetworkTextFieldActionPerformed(evt);
            }
        });
        NetworkTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                NetworkTextFieldKeyPressed(evt);
            }
        });

        SnTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SnTextFieldActionPerformed(evt);
            }
        });
        SnTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SnTextFieldKeyPressed(evt);
            }
        });

        EpisodeTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EpisodeTextFieldActionPerformed(evt);
            }
        });
        EpisodeTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                EpisodeTextFieldKeyPressed(evt);
            }
        });

        RatingTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                RatingTextFieldKeyPressed(evt);
            }
        });

        ClearButton.setText("Clear");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        SortComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S.No.", "Title", "Director", "Screenwritter", "Genre", "Rating", "Episode", "Network", "Aired", "Country", "Ascending", "Desending" }));

        AiredTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AiredTextFieldKeyPressed(evt);
            }
        });

        SortButton.setText("Sort");
        SortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortButtonActionPerformed(evt);
            }
        });

        SearchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "S.No.", "Title", "Director", "Screenwritter", "Genre", "Rating", "Episode", "Network", "Aired", "Country" }));

        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(EpisodeLabel)
                            .addComponent(CountryLabel)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SnLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ScreenwriterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ScreenwriterTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                        .addComponent(EpisodeTextField)
                        .addComponent(CountryTextField)
                        .addComponent(SnTextField)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(SearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(SortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(SortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(GenreLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(NetworkLabel)
                            .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(NetworkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(GenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(71, 71, 71)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(RatingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(AiredLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(TitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(DirectorLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(DirectorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RatingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AiredTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(54, 54, 54))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(DeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(AddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UpdateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 942, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Title, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SortButton)
                    .addComponent(SearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TitleLabel)
                    .addComponent(TitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SnTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DirectorLabel)
                    .addComponent(DirectorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SnLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ScreenwriterLabel)
                    .addComponent(ScreenwriterTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenreLabel)
                    .addComponent(RatingLabel)
                    .addComponent(RatingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NetworkLabel)
                    .addComponent(AiredTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(AiredLabel)
                        .addComponent(EpisodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(EpisodeLabel)
                        .addComponent(NetworkTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CountryLabel)
                    .addComponent(CountryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DeleteButton)
                    .addComponent(AddButton)
                    .addComponent(UpdateButton)
                    .addComponent(ClearButton))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SearchTextFieldActionPerformed

    private void AddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddButtonActionPerformed
        seletctedRow = Table.getSelectedRow();
DefaultTableModel tableModel = (DefaultTableModel) Table.getModel();

if (SnTextField.getText().isEmpty() || TitleTextField.getText().isEmpty() || DirectorTextField.getText().isEmpty() ||
        ScreenwriterTextField.getText().isEmpty() || GenreTextField.getText().isEmpty() || RatingTextField.getText().isEmpty() ||
        EpisodeTextField.getText().isEmpty() || NetworkTextField.getText().isEmpty() || AiredTextField.getText().isEmpty() ||
        CountryTextField.getText().isEmpty()) {
    JOptionPane.showMessageDialog(this, "The text are empty", "Input Error", JOptionPane.ERROR_MESSAGE);
} else {
    try {
        int newrating = Integer.parseInt(RatingTextField.getText());

        if (newrating > 5) {
            JOptionPane.showMessageDialog(this, "Invalid input. Rating must be less than 5.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else if (newrating <= 0) {
            JOptionPane.showMessageDialog(this, "Invalid input. Rating cannot be less than or equal to 0.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int news_no = Integer.parseInt(SnTextField.getText());
            String newtitle = TitleTextField.getText();
            String newdirector = DirectorTextField.getText();
            String newscreenwriter = ScreenwriterTextField.getText();
            String newgenre = GenreTextField.getText();
            int newepisode = Integer.parseInt(EpisodeTextField.getText());
            String newnetwork = NetworkTextField.getText();
            String newaired = AiredTextField.getText();
            String newcountry = CountryTextField.getText();

            tableModel.addRow(new Object[]{news_no, newtitle, newdirector, newscreenwriter, newgenre, newrating, newepisode, newnetwork, newaired, newcountry});

            DramaflixModels model = new DramaflixModels(news_no, newtitle, newdirector, newscreenwriter, newgenre, newrating, newepisode, newnetwork, newaired, newcountry);
            model.setS_no(news_no);
            model.setTitle(newtitle);
            model.setDirector(newdirector);
            model.setScreenwriter(newscreenwriter);
            model.setGenre(newgenre);
            model.setEpisode(newepisode);
            model.setNetwork(newnetwork);
            model.setAired(newaired);
            model.setCountry(newcountry);
            dramaflixList.add(model);

            // Clear the text fields
            SnTextField.setText("");
            TitleTextField.setText("");
            DirectorTextField.setText("");
            ScreenwriterTextField.setText("");
            GenreTextField.setText("");
            RatingTextField.setText("");
            EpisodeTextField.setText("");
            NetworkTextField.setText("");
            AiredTextField.setText("");
            CountryTextField.setText("");
            SearchTextField.setText("");

            JOptionPane.showMessageDialog(this, "The table has been updated", "Update Success", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please input valid values " + e.getMessage(), "Input Error", JOptionPane.ERROR_MESSAGE);
    }
}
        
        
    }//GEN-LAST:event_AddButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(null, "Do you want to delete this row", "Conformation", JOptionPane.YES_NO_OPTION);
        
        if(choice == JOptionPane.YES_OPTION){
        seletctedRow = Table.getSelectedRow();
        DefaultTableModel tableModel = (DefaultTableModel)Table.getModel();
        if(Table.getSelectedColumnCount() == 1){
            tableModel.removeRow(seletctedRow);
        }
        else{
            if(Table.getRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Table is empty");
        }
            else if(Table.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(this, "The row has not been selected please select row");
            }
            else if(Table.getSelectedRowCount() == 0){
                JOptionPane.showMessageDialog(this, "Multiple row is selected please select row");
            }
            
        }
        }
        else{
            JOptionPane.showMessageDialog(this, "No rows deleted", "Not detected", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        // TODO add your handling code here:
        seletctedRow = Table.getSelectedRow();
DefaultTableModel tableModel = (DefaultTableModel) Table.getModel();

if (SnTextField.getText().isEmpty() || TitleTextField.getText().isEmpty() || DirectorTextField.getText().isEmpty() ||
        ScreenwriterTextField.getText().isEmpty() || GenreTextField.getText().isEmpty() || RatingTextField.getText().isEmpty() ||
        EpisodeTextField.getText().isEmpty() || NetworkTextField.getText().isEmpty() || AiredTextField.getText().isEmpty() ||
        CountryTextField.getText().isEmpty()) {
    JOptionPane.showMessageDialog(this, "All the text fields are empty. Please fill in all text fields.", "Input Error", JOptionPane.ERROR_MESSAGE);
} else {
    try {
        int s_no = Integer.parseInt(SnTextField.getText());
        String title = TitleTextField.getText();
        String director = DirectorTextField.getText();
        String screenwriter = ScreenwriterTextField.getText();
        String genre = GenreTextField.getText();
        int rating = Integer.parseInt(RatingTextField.getText());
        int episode = Integer.parseInt(EpisodeTextField.getText());
        String network = NetworkTextField.getText();
        String aired = AiredTextField.getText();
        String country = CountryTextField.getText();

        if (rating > 5) {
            JOptionPane.showMessageDialog(this, "Invalid input. Rating must be less than 5.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else if (rating <= 0) {
            JOptionPane.showMessageDialog(this, "Invalid input. Rating cannot be less than or equal to 0.", "Input Error", JOptionPane.ERROR_MESSAGE);
        } else {
            tableModel.setValueAt(s_no, seletctedRow, 0);
            tableModel.setValueAt(title, seletctedRow, 1);
            tableModel.setValueAt(director, seletctedRow, 2);
            tableModel.setValueAt(screenwriter, seletctedRow, 3);
            tableModel.setValueAt(genre, seletctedRow, 4);
            tableModel.setValueAt(rating, seletctedRow, 5);
            tableModel.setValueAt(episode, seletctedRow, 6);
            tableModel.setValueAt(network, seletctedRow, 7);
            tableModel.setValueAt(aired, seletctedRow, 8);
            tableModel.setValueAt(country, seletctedRow, 9);

            SnTextField.setText("");
            TitleTextField.setText("");
            DirectorTextField.setText("");
            ScreenwriterTextField.setText("");
            GenreTextField.setText("");
            RatingTextField.setText("");
            EpisodeTextField.setText("");
            NetworkTextField.setText("");
            AiredTextField.setText("");
            CountryTextField.setText("");
            SearchTextField.setText("");

            JOptionPane.showMessageDialog(this, "The table has been updated.", "Update Success", JOptionPane.INFORMATION_MESSAGE);
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Please input valid values. " + e.getMessage(), "Input Error", JOptionPane.ERROR_MESSAGE);
    }
}
         
     
        
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void CountryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CountryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CountryTextFieldActionPerformed

    private void EpisodeTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EpisodeTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EpisodeTextFieldActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        SnTextField.setText("");  
        TitleTextField.setText("");
        DirectorTextField.setText("");
        ScreenwriterTextField.setText("");
        GenreTextField.setText("");
        RatingTextField.setText("");
        EpisodeTextField.setText("");
        NetworkTextField.setText("");
        AiredTextField.setText("");
        CountryTextField.setText("");
        SearchTextField.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_ClearButtonActionPerformed

    private void NetworkTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NetworkTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NetworkTextFieldActionPerformed

    private void TableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableMouseClicked
        // TODO add your handling code here:
        seletctedRow = Table.getSelectedRow();
        
        SnTextField.setText(Table.getValueAt(seletctedRow, 0).toString());
        TitleTextField.setText(Table.getValueAt(seletctedRow, 1).toString());
        DirectorTextField.setText(Table.getValueAt(seletctedRow, 2).toString());
        ScreenwriterTextField.setText(Table.getValueAt(seletctedRow, 3).toString());
        GenreTextField.setText(Table.getValueAt(seletctedRow, 4).toString());
        RatingTextField.setText(Table.getValueAt(seletctedRow, 5).toString());
        EpisodeTextField.setText(Table.getValueAt(seletctedRow, 6).toString());
        NetworkTextField.setText(Table.getValueAt(seletctedRow, 7).toString());
        AiredTextField.setText(Table.getValueAt(seletctedRow, 8).toString());
        CountryTextField.setText(Table.getValueAt(seletctedRow, 9).toString());
        
    }//GEN-LAST:event_TableMouseClicked

    private void SnTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SnTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SnTextFieldActionPerformed

    private void UpdateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UpdateButtonMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_UpdateButtonMouseClicked

    private void SortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortButtonActionPerformed
        // TODO add your handling code here:
        MergesortDramaflix dramaflixSorter = new MergesortDramaflix();
        DefaultTableModel tableModel = (DefaultTableModel)Table.getModel();
        
        String date = (SortComboBox.getSelectedItem()).toString();
            
            //ramaflixModels[] dramaflixArray = dramaflixList.toArray(new DramaflixModels[0]);
            
            dramaflixSorter.sort(dramaflixList, date);
            
            tableModel.setRowCount(0);
            
            for (DramaflixModels dramaflix : dramaflixList){
                Object[] rowData = {
                    dramaflix.getS_no(),
                    dramaflix.getTitle(),
                    dramaflix.getDirector(),
                    dramaflix.getScreenwriter(),
                    dramaflix.getGenre(),
                    dramaflix.getRating(),
                    dramaflix.getEpisode(),
                    dramaflix.getNetwork(),
                    dramaflix.getAired(),
                    dramaflix.getCountry()
                };
                tableModel.addRow(rowData);
            } 
            
    }//GEN-LAST:event_SortButtonActionPerformed

    private void GenreTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenreTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenreTextFieldActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        // TODO add your handling code here:
           MergesortDramaflix dramaflixSorter = new MergesortDramaflix();
        String filter = SearchComboBox.getSelectedItem().toString();
        dramaflixSorter.sort(dramaflixList, filter);
        List<DramaflixModels> searchedModel = new ArrayList<>();
        if(filter.equals("Episode")){
            int searchKey = Integer.parseInt(SearchTextField.getText());
            searchedModel = performBinarySearchAll(
                searchKey, dramaflixList, 0,
                dramaflixList.size() - 1);
        }else if(filter.equals("Title")){
            String searchKey = SearchTextField.getText();
            searchedModel = performBinarySearchTitle(
                searchKey, dramaflixList, 0,
                dramaflixList.size() - 1,filter);
        }
        StringBuilder searchFound = new StringBuilder();
        for (DramaflixModels model : searchedModel) {
           
            searchFound.append("S.No." +  model.getS_no())
                    .append("\nTitle: " + model.getTitle())
                    .append("\nDirector: " + model.getDirector())
                    .append("\nScreenwriter: " + model.getScreenwriter())
                    .append("\nGenre: " + model.getGenre())
                    .append("\nRating: " + model.getRating())
                    .append("\nEpisode: " + model.getEpisode())
                    .append("\nNetwork: " + model.getNetwork())
                    .append("\nAired: " + model.getAired())
                    .append("\nCountry: " + model.getCountry());
            System.out.println("Data at index: " + model.getS_no() +
                    ", Title: " + model.getTitle() +
                    ", Director: " + model.getDirector()+
                    ", Screenwriter: " + model.getScreenwriter()+
                    ", Genre: " + model.getGenre()+
                    ", Rating: " + model.getRating()+
                    ", Episode: " + model.getEpisode()+
                    ", Network: " + model.getNetwork()+
                    ", Aired: " + model.getAired()+
                    ", Country: " + model.getCountry());
        }
        JOptionPane.showMessageDialog(null, searchFound , "Search found", JOptionPane.INFORMATION_MESSAGE);
       
        System.out.println("Found Datas");
        System.out.println(dramaflixList);
        System.out.println(searchedModel.size());
    
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void SnTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SnTextFieldKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(Character.isLetter(a)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Please enter the number", "Invalid", JOptionPane.ERROR_MESSAGE);
            SnTextField.setText("");
        }
    }//GEN-LAST:event_SnTextFieldKeyPressed

    private void TitleTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TitleTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TitleTextFieldKeyPressed

    private void DirectorTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DirectorTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_DirectorTextFieldKeyPressed

    private void ScreenwriterTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ScreenwriterTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_ScreenwriterTextFieldKeyPressed

    private void GenreTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_GenreTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_GenreTextFieldKeyPressed

    private void RatingTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_RatingTextFieldKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(Character.isLetter(a)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Please enter the number", "Invalid", JOptionPane.ERROR_MESSAGE);
            RatingTextField.setText("");
        }
    }//GEN-LAST:event_RatingTextFieldKeyPressed

    private void EpisodeTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EpisodeTextFieldKeyPressed
        // TODO add your handling code here:
        char a = evt.getKeyChar();
        if(Character.isLetter(a)){
            evt.consume();
            JOptionPane.showMessageDialog(this, "Please enter the number", "Invalid", JOptionPane.ERROR_MESSAGE);
            EpisodeTextField.setText("");
        }
    }//GEN-LAST:event_EpisodeTextFieldKeyPressed

    private void NetworkTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NetworkTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_NetworkTextFieldKeyPressed

    private void AiredTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AiredTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_AiredTextFieldKeyPressed

    private void CountryTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CountryTextFieldKeyPressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_CountryTextFieldKeyPressed
    
   public void getTableData() {
    int row = Table.getRowCount();
    for (int i = 0; i < row; i++) {
        DramaflixModels model = new DramaflixModels(
                Integer.parseInt(Table.getValueAt(i, 0).toString().trim()), // Trim leading and trailing spaces
                Table.getValueAt(i, 1).toString(),
                Table.getValueAt(i, 2).toString(),
                Table.getValueAt(i, 3).toString(),
                Table.getValueAt(i, 4).toString().trim(), // Trim leading and trailing spaces
                Integer.parseInt(Table.getValueAt(i, 5).toString().trim()), // Trim leading and trailing spaces
                Integer.parseInt(Table.getValueAt(i, 6).toString().trim()), // Trim leading and trailing spaces
                Table.getValueAt(i, 7).toString(),
                Table.getValueAt(i, 8).toString(),
                Table.getValueAt(i, 9).toString()
        );
        dramaflixList.add(model);
    }
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dramaflix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dramaflix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dramaflix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dramaflix.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dramaflix().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddButton;
    private javax.swing.JLabel AiredLabel;
    private javax.swing.JTextField AiredTextField;
    private javax.swing.JButton ClearButton;
    private javax.swing.JLabel CountryLabel;
    private javax.swing.JTextField CountryTextField;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JLabel DirectorLabel;
    private javax.swing.JTextField DirectorTextField;
    private javax.swing.JLabel EpisodeLabel;
    private javax.swing.JTextField EpisodeTextField;
    private javax.swing.JLabel GenreLabel;
    private javax.swing.JTextField GenreTextField;
    private javax.swing.JLabel NetworkLabel;
    private javax.swing.JTextField NetworkTextField;
    private javax.swing.JLabel RatingLabel;
    private javax.swing.JTextField RatingTextField;
    private javax.swing.JLabel ScreenwriterLabel;
    private javax.swing.JTextField ScreenwriterTextField;
    private javax.swing.JButton SearchButton;
    private javax.swing.JComboBox<String> SearchComboBox;
    private javax.swing.JTextField SearchTextField;
    private javax.swing.JLabel SnLabel;
    private javax.swing.JTextField SnTextField;
    private javax.swing.JButton SortButton;
    private javax.swing.JComboBox<String> SortComboBox;
    private javax.swing.JTable Table;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JTextField TitleTextField;
    private javax.swing.JButton UpdateButton;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logo;
    // End of variables declaration//GEN-END:variables
}
